name: fks_config CI

concurrency:
  group: fks_config-ci-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    paths:
      - 'src/**'
      - 'config/**'
      - 'Cargo.toml'
      - 'Dockerfile*'
      - '.github/workflows/fks_config-ci.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'config/**'
      - 'Cargo.toml'
      - 'Dockerfile*'
      - '.github/workflows/fks_config-ci.yml'
      - 'Dockerfile'
      - '.github/workflows/fks_config-ci.yml'
  workflow_dispatch: {}

jobs:
  test:
    name: Unit Tests (Rust)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: fks_config-rust-cache

      - name: Check code format
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Build release
        run: cargo build --release

  docker-build:
    name: Docker Build & Smoke
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 20
    env:
      SERVICE_SLUG: config
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: local/fks
          tags: |
            type=ref,event=branch,prefix=config-
            type=sha,prefix=config-
            type=raw,value=config-latest

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
            context: .
            file: Dockerfile
            push: false
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            build-args: |
              SERVICE_RUNTIME=rust
              SERVICE_TYPE=config
              BUILD_TYPE=cpu

      - name: Smoke test
        run: |
          TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          docker run --rm --name fks_config_test "$TAG" --help || (echo 'Run failed'; exit 1)
          echo 'Basic smoke test passed - CLI responds to --help'

      - name: Export image artifact
        run: |
          docker save $(echo "${{ steps.meta.outputs.tags }}" | head -n1) | gzip > fks_config-image.tar.gz

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: fks_config-image
          path: fks_config-image.tar.gz
